# this is a sample schema to be used for testing

### COMMENTS / DOCUMENTATION
# I'm a short comment
"""
I'm a longer documentation comment that
can run across multiple lines
"""
scalar Date ### CUSTOM SCALARS
interface ILocation {
  id: ID!
  address: String!
  city: String!
  state: String!
  zipCode: Int!
  phoneNumber: String
}

type Library implements ILocation {
  id: ID!
  name: String!
  address: String!
  city: String!
  state: String!
  zip_code: Int!
  phone_number: String
  books: [Book]!
  bookCopies: [BookCopy]!
  early_start_program: Boolean!
  founded: Date
}

type Bookstore implements ILocation {
  id: ID!
  name: String!
  address: String!
  city: String!
  state: String!
  zipCode: Int!
  phoneNumber: String
  books: [Book]!
  bookCopies: [BookCopy]!
  brainyBooksCharityMember: Boolean!
}

union BookSupplier = Library | Bookstore

enum AVAILABILITY {
  UNAVAILABLE
  AVAILABLE
  PENDING
}

type Book {
  id: Id!
  name: String!
  author: String!
  yearOfPublication: Int
  copies: [BookCopy]!
  locations: [BookSupplier]!
}

type BookCopy {
  id: ID!
  book: Book!
  availability: AVAILABILITY!
  supplier: BookSupplier!
}

input BookInput {
  name: String!
  author: String!
  yearOfPublication: Int
}

input BookCopyInput {
  bookId: ID!
  supplierId: ID!
}

input BookSearchInput {
  name: String
  author: String
  location: String # name of BookSupplier
}

type Query {
  getAllLocations: [BookSupplier]!
  findBook(searchParams: BookSearchInput!): [BookSupplier]!
}

type Mutation {
  addBook(book: BookInput!): Book!
  addBookCopy(bookCopy: BookCopyInput!): BookCopy!
  checkoutBook(bookCopyId: ID!): BookCopy
  returnBook(bookCopyId: ID!): Boolean!
  removeBook(id: ID!): Boolean!
  removeBookCopy(id: ID!): Boolean!
}

### SUBSCRIPTIONS -add later

### CUSTOM DIRECTIVES??? - possibly add later
